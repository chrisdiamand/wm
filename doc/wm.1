.TH wm 1

.SH NAME
wm \- a lightweight and unobtrusive X11 window manager designed with smaller screens in mind.

.SH SYNOPSIS
.B wm

.SH DESCRIPTION
.B wm
is designed to maximise the screen space used by applications, rather than
use it up with pretty but useless things like window borders and panels.
Getting rid of, for example, 25 pixels for the panel and maybe 15 for the
title bars saves 40 pixels, or three or four lines of text. To put it another
way, if you had a 1366x768 display, and gained 40 lines pixels, your display would
be effectively 5% bigger, for free! 

.SH USAGE
Inspired by dwm(1), it uses keyboard combinations in lieu of window buttons.
Some actions, and the default ways of achieving them, are listed here:

.TP
.B Moving a window
Hold down alt, click and drag. This is similar to most other Linux/BSD
window managers. If the window edges are near any screen edges they
will 'snap' towards them. The distance at which this occurs can be configured with
the 'snap_width' variable.

.TP
.B Resizing a window
Hold down shift and alt, then click and drag. This will (currently) change the
position of the bottom right corner relative to the rest of the window. Window
edges will also 'snap' towards screen edges.

.TP
.B Launching programs
Shift+alt+enter (or return) will show a text box at the top of the screen, into
which commands may be typed. These will be executed with the C 'system()' function,
but in the background. For example, if you type
.B 'rxvt'
then
.B 'rxvt &'
will be executed.

.TP
.B Switching between programs/changing the focus
.B wm
can switch between windows using alt+tab, which brings up a box showing the titles
of the current open windows. Pressing tab again will select the next one, and
shift+tab will select the previous one. Releasing will focus the selected window, and
pressing escape will cancel.

.TP
.B Fullscreening windows.
This is really the whole point of
.B wm.
Pressing shift+alt+f will make the window take up the entire screen, with no border or
decorations in sight. Pressing the same combination again will return it to its
original size. This comes into its own with things like PDFs, or even a full screen
xterm(1) if that's your cup of tea.

.TP
.B Tiling
While it is not a tiling window manager, windows can be easily arranged to fit exactly
next to each other, as long as there are only two windows, and as long as they both take up
exactly half the screen. Pressing shift+alt+left arrow will make a window fill the entire
left half of the screen, and shift+alt+right arrow will fill the entire right. A similar rule
applies for up and down. More fractions will be implemented in future versions.

.TP
.B Killing programs
This would be shift+alt+x, but it is not implemented yet.

.SH CONFIGURATION
The configuration files are of the format
.B parameter_name = value
where value is an
.B integer
(e.g. 2932, 23), a
.B string
in double quotes, a
.B boolean
(i.e. YES or NO), or a
.B colour
(a comma-separated list of three integers between 0 and 255
which are the red, green, and blue components respectively). These are the available
options, in no particular order:

.TP
.B border_width = integer
The width in pixels of the window borders. Set to 1 by default, and is always 0 when a window
is fullscreened.

.TP
.B snap_width = integer
The maximum distance at which a window will 'snap' to the sides of the screen when being
moved or resized.

.TP
.B switcher_char_width = integer
The number of characters visible in the alt+tab switcher.

.TP
.B focus_border_col = colour
The colour of the border of the window which currently has the input focus.

.TP
.B unfocus_border_col = colour
The colour of all the other windows (which aren't in focus).

.TP
.B fg_col = colour
The colour of the text in the alt+tab switcher and command launcher windows.

.TP
.B bg_col = colour
The colour of the background in those windows.

.TP
.B launcher_font = string
Specifies the font to be used in the launcher window. Reverts to "fixed" if it cannot be found.

.TP
.B switcher_font = string
The equivalent of launcher_font, but for the alt+tab switcher.

.SH FILES
~/.wmrc

.SH AUTHOR
Program and man page written by Chris Diamand.




